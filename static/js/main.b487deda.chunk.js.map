{"version":3,"sources":["List.js","App_class.js","index.js"],"names":["List","props","tryInfo","try","userInput","resultState","getNumbers","candidateNumbers","console","log","selectedNumber","i","selectedIndex","Math","floor","random","length","push","splice","toString","App","state","tries","value","result","answer","inputRef","c","input","onSubmit","e","preventDefault","join","split","setState","setTimeout","strike","ball","includes","prevState","focus","onChangeInput","target","this","className","ref","type","maxLength","onChange","map","v","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAUeA,EAVF,SAACC,GACZ,OACE,+BACE,+BAAKA,EAAMC,QAAQC,IAAnB,aACA,4BAAIF,EAAMC,QAAQE,YAClB,4BAAIH,EAAMC,QAAQG,kBCFxB,SAASC,IACP,IAAMC,EAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACrDC,QAAQC,IAAR,qCAA0CF,IAE1C,IADA,IAAMG,EAAiB,GACdC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAMC,EAAgBC,KAAKC,MACzBD,KAAKE,UAAYR,EAAiBS,OAASL,IAE7CD,EAAeO,KAAKV,EAAiBW,OAAON,EAAe,GAAGO,YAGhE,OAAOT,E,IAiIMU,E,4MA7HbC,MAAQ,CACNC,MAAO,GACPC,MAAO,GACPC,OAAQ,GACRC,OAAQnB,K,EAWVoB,SAAW,SAACC,GACV,EAAKC,MAAQD,G,EAGfE,SAAW,SAACC,GAcV,GAbAA,EAAEC,iBAEFvB,QAAQC,IAAR,iBACY,EAAKY,MAAME,MADvB,iCACqD,EAAKF,MAAME,QAGhEf,QAAQC,IAAR,yBACoB,EAAKY,MAAMI,OAAOO,KAClC,IAFJ,sCAGiC,EAAKX,MAAMI,OAAOO,KAAK,MAGxDxB,QAAQC,IAAR,2BAAgC,EAAKY,MAAME,MAAMU,MAAM,IAAI,KACvD,EAAKZ,MAAME,QAAU,EAAKF,MAAMI,OAAOO,KAAK,IAC9C,EAAKE,SAAS,CACZV,OACE,2EAGJW,YAAW,WACT,EAAKD,SAAS,CACZV,OAAQ,GACRF,MAAO,GACPC,MAAO,GACPE,OAAQnB,QAET,SACE,CACL,GAAI,EAAKe,MAAMC,MAAMN,OAAS,EAAG,CAI/B,IAHA,IAAIoB,EAAS,EACTC,EAAO,EAEF1B,EAAI,EAAGA,EAAI,EAAKU,MAAMI,OAAOT,OAAQL,IACxC,EAAKU,MAAME,MAAMU,MAAM,IAAItB,KAAO,EAAKU,MAAMI,OAAOd,GACtDyB,IACS,EAAKf,MAAME,MAAMe,SAAS,EAAKjB,MAAMI,OAAOd,KACrD0B,IAIJ7B,QAAQC,IAAR,kBAAuB2B,IACvB5B,QAAQC,IAAR,gBAAqB4B,IAErB,EAAKH,UAAS,SAACK,GACb,MAAO,CACLjB,MAAM,GAAD,mBACAiB,EAAUjB,OADV,CAEH,CACElB,UAAW,EAAKiB,MAAME,MACtBpB,IAAK,EAAKkB,MAAMC,MAAMN,OAAS,EAC/BX,YAAY,GAAD,OAAK+B,EAAL,uBAA0BC,EAA1B,qBAMnB,EAAKH,SAAS,CACZV,OAAQ,4DACRF,MAAO,GACPG,OAAQnB,IAIZ,EAAKsB,MAAMY,QACX,EAAKN,SAAS,CACZX,MAAO,KAGT,EAAKK,MAAMY,U,EAIfC,cAAgB,SAACd,GACf,EAAKO,SAAS,CAAEX,MAAOI,EAAEe,OAAOnB,S,uDAOhC,OADAf,QAAQC,IAAIkC,KAAKtB,MAAMI,QAErB,sBAAKmB,UAAU,MAAf,UACE,4BAAID,KAAKtB,MAAMG,SAEf,sBAAMK,SAAUc,KAAKd,SAArB,SACE,uBACEgB,IAAKF,KAAKjB,SACVoB,KAAK,OACLvB,MAAOoB,KAAKtB,MAAME,MAClBwB,UAAU,IACVC,SAAUL,KAAKF,kBAEnB,8BACE,mDAAsBE,KAAKtB,MAAMC,MAAMN,YAEzC,6BACG2B,KAAKtB,MAAMC,MAAM2B,KAAI,SAACC,EAAGvC,GACxB,OAAO,cAAC,EAAD,CAAuBT,QAASgD,GAAhC,UAAcvC,EAAd,qB,GAtHDwC,aCXlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b487deda.chunk.js","sourcesContent":["const List = (props) => {\r\n  return (\r\n    <li>\r\n      <h3>{props.tryInfo.try} inning</h3>\r\n      <p>{props.tryInfo.userInput}</p>\r\n      <p>{props.tryInfo.resultState}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import { Component } from 'react';\r\nimport List from './List';\r\n\r\nfunction getNumbers() {\r\n  const candidateNumbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n  console.log(`initial candidate numbers: ${candidateNumbers}`);\r\n  const selectedNumber = [];\r\n  for (let i = 0; i < 4; i++) {\r\n    const selectedIndex = Math.floor(\r\n      Math.random() * (candidateNumbers.length - i)\r\n    );\r\n    selectedNumber.push(candidateNumbers.splice(selectedIndex, 1).toString());\r\n  }\r\n\r\n  return selectedNumber;\r\n}\r\n\r\nclass App extends Component {\r\n  state = {\r\n    tries: [],\r\n    value: '',\r\n    result: '',\r\n    answer: getNumbers(),\r\n  };\r\n\r\n  //   const [tries, setTries] = useState([]);\r\n  //   const [value, setValue] = useState('');\r\n  //   const [result, setResult] = useState('');\r\n  //   const [answer, setAnswer] = useState(getNumbers);\r\n  //   const inputRef = useRef(null);\r\n\r\n  input;\r\n\r\n  inputRef = (c) => {\r\n    this.input = c;\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(\r\n      `value: ${this.state.value}, value type = ${typeof this.state.value}`\r\n    );\r\n\r\n    console.log(\r\n      `answer.join(): ${this.state.answer.join(\r\n        ''\r\n      )}, answer.join type: ${typeof this.state.answer.join('')}`\r\n    );\r\n\r\n    console.log(`value.split(''): ${this.state.value.split('')[0]}`);\r\n    if (this.state.value === this.state.answer.join('')) {\r\n      this.setState({\r\n        result:\r\n          'Congratuation. You got the correct numbers, The game will be restarted',\r\n      });\r\n\r\n      setTimeout(() => {\r\n        this.setState({\r\n          result: '',\r\n          tries: [],\r\n          value: '',\r\n          answer: getNumbers(),\r\n        });\r\n      }, 3000);\r\n    } else {\r\n      if (this.state.tries.length < 9) {\r\n        let strike = 0;\r\n        let ball = 0;\r\n\r\n        for (let i = 0; i < this.state.answer.length; i++) {\r\n          if (this.state.value.split('')[i] === this.state.answer[i]) {\r\n            strike++;\r\n          } else if (this.state.value.includes(this.state.answer[i])) {\r\n            ball++;\r\n          }\r\n        }\r\n\r\n        console.log(`strike: ${strike}`);\r\n        console.log(`ball: ${ball}`);\r\n\r\n        this.setState((prevState) => {\r\n          return {\r\n            tries: [\r\n              ...prevState.tries,\r\n              {\r\n                userInput: this.state.value,\r\n                try: this.state.tries.length + 1,\r\n                resultState: `${strike} Strike and ${ball} Ball`,\r\n              },\r\n            ],\r\n          };\r\n        });\r\n      } else {\r\n        this.setState({\r\n          result: 'You are failed to find correct numbers. Please try again.',\r\n          tries: [],\r\n          answer: getNumbers,\r\n        });\r\n      }\r\n\r\n      this.input.focus();\r\n      this.setState({\r\n        value: '',\r\n      });\r\n\r\n      this.input.focus();\r\n    }\r\n  };\r\n\r\n  onChangeInput = (c) => {\r\n    this.setState({ value: c.target.value });\r\n  };\r\n\r\n  input;\r\n\r\n  render() {\r\n    console.log(this.state.answer);\r\n    return (\r\n      <div className='App'>\r\n        <p>{this.state.result}</p>\r\n\r\n        <form onSubmit={this.onSubmit}>\r\n          <input\r\n            ref={this.inputRef}\r\n            type='text'\r\n            value={this.state.value}\r\n            maxLength='4'\r\n            onChange={this.onChangeInput}></input>\r\n        </form>\r\n        <div>\r\n          <h3>Number of Tries: {this.state.tries.length}</h3>\r\n        </div>\r\n        <ul>\r\n          {this.state.tries.map((v, i) => {\r\n            return <List key={`${i} try`} tryInfo={v} />;\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport Appclass from './App_class';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Appclass />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}